import unittest
import numpy as np
from .localization import get_theor_spectrum
from .AA_stat import AA_stat
from . import utils, io
import argparse
import logging
from pyteomics import mass
import os

class AAstatTheorSpectrumTest(unittest.TestCase):

    def setUp(self):
        self.spec_PEPTIDE = {
            ('b', 1): np.array([98.06003647, 227.10262647, 324.15538647, 425.20306647, 538.28712647, 653.31406647]),
            ('y', 1): np.array([148.06043115, 263.08737115, 376.17143115, 477.21911115, 574.27187115, 703.31446115]),
            ('b', 2): np.array([49.53365647, 114.05495147, 162.58133147, 213.10517147, 269.64720147, 327.16067147]),
            ('y', 2): np.array([74.53385381, 132.04732381, 188.58935381, 239.11319381, 287.63957381, 352.16086881])
        }
        self.spec_int_PEPTIDE = {
            'b': {4953, 9806, 11405, 16258, 21310, 22710, 26964, 32415, 32716, 42520, 53828, 65331},
            'y': {26308, 23911, 47721, 28763, 18858, 35216, 37617, 57427, 13204, 14806, 70331, 7453}
        }
        self.spec_mPEPTIDE = {
            ('b', 1): np.array([114.05495147, 243.09754147, 340.15030147, 441.19798147, 554.28204147, 669.30898147]),
            ('y', 1): np.array([148.06043115, 263.08737115, 376.17143115, 477.21911115, 574.27187115, 703.31446115]),
            ('b', 2): np.array([57.53111397, 122.05240897, 170.57878897, 221.10262897, 277.64465897, 335.15812897]),
            ('y', 2): np.array([74.53385381, 132.04732381, 188.58935381, 239.11319381, 287.63957381, 352.16086881])
        }
        self.spec_int_mPEPTIDE = {
            'b': {17057, 55428, 33515, 11405, 12205, 66930, 27764, 24309, 44119, 5753, 22110, 34015},
            'y': {7453, 13204, 14806, 18858, 23911, 26308, 28763, 35216, 37617, 47721, 57427, 70331}
        }
        self.spec_PEPTIDE_cz = {
            ('c', 1): np.array([115.08658557, 244.12917557, 341.18193557, 442.22961557, 555.31367557, 670.34061557]),
            ('z', 1): np.array([131.03388205, 246.06082205, 359.14488205, 460.19256205, 557.24532205, 686.28791205]),
            ('c', 2): np.array([58.04693102, 122.56822602, 171.09460602, 221.61844602, 278.16047602, 335.67394602]),
            ('z', 2): np.array([66.02057926, 123.53404926, 180.07607926, 230.59991926, 279.12629926, 343.64759426])
        }
        self.spec_int_PEPTIDE_cz = {
            'c': {12256, 34118, 27816, 55531, 5804, 22161, 11508, 17109, 67034, 24412, 44222, 33567},
            'z': {12353, 46019, 27912, 35914, 6602, 55724, 13103, 23059, 68628, 18007, 34364, 24606}
        }

    def _compare_spectra(self, spec, spec_int, spec_true, spec_int_true, eps=1e-6):
        spec = {k: sorted(v) for k, v in spec.items()}
        self.assertEqual(spec.keys(), spec_true.keys())
        for k in spec:
            spec[k].sort()
            self.assertTrue(np.allclose(spec[k], spec_true[k], atol=eps))

        self.assertEqual(spec_int, spec_int_true)

    def test_theor_spec_PEPTIDE(self):
        spec, spec_int = get_theor_spectrum(list('PEPTIDE'), 0.01, ion_types=('b', 'y'), maxcharge=2)
        self._compare_spectra(spec, spec_int, self.spec_PEPTIDE, self.spec_int_PEPTIDE)

    def test_theor_spec_mPEPTIDE(self):
        custom_mass = mass.std_aa_mass.copy()
        custom_mass['mP'] = mass.std_aa_mass['P'] + 15.994915
        spec, spec_int = get_theor_spectrum(['mP'] + list('EPTIDE'), 0.01, ion_types=('b', 'y'), maxcharge=2,
                                            aa_mass=custom_mass)
        self._compare_spectra(spec, spec_int, self.spec_mPEPTIDE, self.spec_int_mPEPTIDE)

    def test_theor_spec_PEPTIDE_cz(self):
        spec, spec_int = get_theor_spectrum(list('PEPTIDE'), 0.01, ion_types=('c', 'z'), maxcharge=2)
        self._compare_spectra(spec, spec_int, self.spec_PEPTIDE_cz, self.spec_int_PEPTIDE_cz)

    def test_theor_spec_termPEPTIDE(self):
        MOD = 42.12
        acc = 0.01
        custom_mass = mass.std_aa_mass.copy()
        custom_mass['H-'] = MOD + mass.nist_mass['H'][0][0]
        spec, spec_int = get_theor_spectrum(list('PEPTIDE'), acc, ion_types=('b', 'y'), maxcharge=2,
                                            aa_mass=custom_mass)
        spec_true = self.spec_PEPTIDE.copy()
        for k in spec_true:
            if k[0] == 'b':
                spec_true[k] += MOD / k[1]
        spec_int_true = self.spec_int_PEPTIDE.copy()
        spec_int_true['b'] = {int(x / acc) for x in np.concatenate((spec_true[('b', 1)], spec_true[('b', 2)]))}
        self._compare_spectra(spec, spec_int, spec_true, spec_int_true)

    def test_theor_spec_PEPTIDEterm(self):
        MOD = 42.12
        acc = 0.01
        custom_mass = mass.std_aa_mass.copy()
        custom_mass['-OH'] = MOD + mass.nist_mass['H'][0][0] + mass.nist_mass['O'][0][0]
        spec, spec_int = get_theor_spectrum(list('PEPTIDE'), acc, ion_types=('b', 'y'), maxcharge=2,
                                            aa_mass=custom_mass)
        spec_true = self.spec_PEPTIDE.copy()
        for k in spec_true:
            if k[0] == 'y':
                spec_true[k] += MOD / k[1]
        spec_int_true = self.spec_int_PEPTIDE.copy()
        spec_int_true['y'] = {int(x / acc) for x in np.concatenate((spec_true[('y', 1)], spec_true[('y', 2)]))}
        self._compare_spectra(spec, spec_int, spec_true, spec_int_true)


class AAstatResultTest(unittest.TestCase):
    def setUp(self):
        self.maxDiff = None
        self.data_dir = os.path.join(
            os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'test_data')

        self.pepxml = [os.path.join(self.data_dir, 'SDS_01_0{}.pepXML'.format(num)) for num in [1, 2]]
        self.mzml = [os.path.join(self.data_dir, 'SDS_01_0{}.mzML'.format(num)) for num in [1, 2]]
        verbosity = int(os.environ.get('AASTAT_VERBOSITY', '1'))
        levels = [logging.WARNING, logging.INFO, logging.DEBUG, utils.INTERNAL]
        logging.basicConfig(format='{levelname:>8}: {asctime} {message}',
                        datefmt='[%H:%M:%S]', level=levels[verbosity], style='{')

    def test_aastat(self):
        if not os.path.isdir(self.data_dir):
            print('Test data not found, skipping integrative test.')
            return

        for f in self.pepxml + self.mzml:
            if not os.path.isfile(f):
                print(f, 'not found, skipping integrative test.')
                return

        args = argparse.Namespace(dir=self.data_dir, pepxml=self.pepxml, mzml=self.mzml,
            mgf=None, csv=None, params=None)
        params_dict = io.get_params_dict(args)
        self.figure_data, self.table, self.locmod_df, self.mass_shift_data_dict, self.fix_mods, self.var_mods = AA_stat(params_dict, args)

        self.assertEqual(self.table.index.tolist(),
            ['-246.1898', '-229.1630', '-203.1837', '-172.1413', '-171.1389', '-157.1415',
             '-147.1573', '-129.1468', '-116.0582', '-115.1201', '-114.1361', '-113.1335',
             '-100.1204', '-91.0091', '-72.1252', '-25.0315', '-18.0106', '-9.0368', '-2.0156', '-0.9374',
             '+0.0000', '+0.9842', '+1.0028', '+1.9874', '+2.0048', '+13.9786', '+15.0114',
             '+15.9949', '+16.9974', '+17.0268', '+17.9997', '+18.0283', '+30.9814', '+31.9894', '+32.9925',
             '+47.9847', '+52.9218', '+57.0217', '+58.0241', '+100.0160', '+229.1626', '+230.1649']
            )

        self.assertEqual(self.table['# peptides in bin'].tolist(),
            [57, 179, 172, 540, 97, 82, 102, 279, 57, 67, 283, 53, 102, 67, 125, 61, 139, 147, 72, 61,
             2854, 341, 558, 104, 81, 148, 72, 457, 170, 276, 74, 54, 108, 196, 62, 58, 342, 398, 110, 65, 158, 77]
            )

        self.assertEqual(self.fix_mods, {})

        self.assertEqual(self.var_mods, [
            ('isotope error', 1), ('N-term', '-172.1413'), ('N', '+0.9842'), ('N-term', '+52.9218'),
            ('M', '+15.9949'), ('N-term', '-129.1468')
            ])

        self.assertEqual(self.locmod_df['localization'].tolist(),
            [
                {'N-term_-246.1898': 37, 'C_-246.1898': 24, 'Q_-246.1898': 12, 'P_-246.1898': 4, 'non-localized': 15, 'C-term_-246.1898': 1, 'K_-246.1898': 1, 'F_-246.1898': 1},
                {'N-term_-229.1630': 129, 'G_-229.1630': 10, 'T_-229.1630': 19, 'D_-229.1630': 9, 'S_-229.1630': 8, 'N-term_-246.1898': 2, 'C_-246.1898': 5, 'E_+17.0268': 3, 'F_-229.1630': 7, 'N_-229.1630': 5, 'P_-246.1898': 2, 'K_+17.0268': 7, 'M_-229.1630': 1, 'H_-229.1630': 1, 'L_-229.1630': 13, 'A_-229.1630': 10, 'C-term_-229.1630': 26, 'K_-229.1630': 25, 'non-localized': 9, 'I_-229.1630': 5, 'R_-229.1630': 2, 'V_-229.1630': 10, 'C-term_+17.0268': 1, 'E_-229.1630': 17, 'C_-229.1630': 5, 'Y_-246.1898': 3, 'Q_-229.1630': 7, 'C-term_-246.1898': 1, 'K_-246.1898': 1, 'Y_-229.1630': 1, 'N-term_+17.0268': 4, 'G_+17.0268': 1, 'H_-246.1898': 3, 'D_+17.0268': 1, 'L_+17.0268': 1, 'N_+17.0268': 1},
                {'N-term_-203.1837': 103, 'Q_-203.1837': 7, 'Y_-203.1837': 8, 'A_-203.1837': 5, 'H_-203.1837': 9, 'S_-203.1837': 10, 'non-localized': 23, 'T_-203.1837': 7, 'E_-203.1837': 20, 'N_-203.1837': 11, 'C-term_-203.1837': 37, 'K_-203.1837': 37, 'G_-203.1837': 3, 'V_-203.1837': 5, 'F_-203.1837': 4, 'L_-203.1837': 6, 'D_-203.1837': 12, 'I_-203.1837': 3, 'R_-203.1837': 1, 'W_-203.1837': 1},
                {'N-term_-229.1630': 15, 'M_-229.1630': 1, 'T_+57.0217': 2, 'N-term_-172.1413': 332, 'N_-172.1413': 12, 'G_-229.1630': 5, 'C_+57.0217': 3, 'L_-172.1413': 45, 'G_-172.1413': 29, 'non-localized': 37, 'A_+57.0217': 4, 'C-term_-229.1630': 9, 'K_-229.1630': 12, 'V_-172.1413': 36, 'Y_-172.1413': 18, 'F_-172.1413': 18, 'I_-172.1413': 31, 'A_-172.1413': 33, 'Q_-172.1413': 9, 'S_-172.1413': 25, 'C-term_-172.1413': 147, 'K_-172.1413': 146, 'Y_+57.0217': 2, 'T_-172.1413': 21, 'H_-172.1413': 6, 'D_+57.0217': 4, 'D_-172.1413': 17, 'R_-229.1630': 2, 'S_+57.0217': 3, 'W_-172.1413': 9, 'C_-172.1413': 9, 'E_-172.1413': 7, 'E_+57.0217': 3, 'T_-229.1630': 1, 'M_-172.1413': 4, 'E_-229.1630': 1, 'K_+57.0217': 2, 'R_-172.1413': 4, 'F_-229.1630': 1, 'H_+57.0217': 1, 'Y_-229.1630': 1},
                {'N-term_-171.1389': 72, 'M_-171.1389': 1, 'V_-171.1389': 6, 'G_-171.1389': 12, 'C-term_-171.1389': 24, 'K_-171.1389': 22, 'L_-171.1389': 7, 'R_-171.1389': 4, 'E_-171.1389': 3, 'Y_-171.1389': 5, 'H_-171.1389': 2, 'N_-171.1389': 4, 'T_-171.1389': 4, 'F_-171.1389': 2, 'A_-171.1389': 9, 'S_-171.1389': 5, 'D_-171.1389': 6, 'Q_-171.1389': 1, 'I_-171.1389': 2, 'C_-171.1389': 1},
                {'N-term_-157.1415': 78, 'S_-157.1415': 5, 'D_-157.1415': 4, 'A_-157.1415': 6, 'T_-157.1415': 9, 'H_-157.1415': 6, 'Y_-157.1415': 2, 'I_-157.1415': 5, 'L_-157.1415': 11, 'V_-157.1415': 8, 'G_-157.1415': 6, 'Q_-157.1415': 5, 'E_-157.1415': 3, 'C-term_-157.1415': 2, 'K_-157.1415': 2, 'N_-157.1415': 4, 'C_-157.1415': 4, 'non-localized': 1, 'F_-157.1415': 1},
                {'N-term_-147.1573': 59, 'M_-147.1573': 1, 'N-term_-18.0106': 1, 'A_-18.0106': 1, 'H_-129.1468': 2, 'G_-147.1573': 8, 'Q_-147.1573': 4, 'H_-147.1573': 4, 'C-term_-147.1573': 32, 'K_-147.1573': 35, 'D_-147.1573': 4, 'N_-147.1573': 2, 'A_-147.1573': 4, 'L_-147.1573': 7, 'I_-147.1573': 4, 'V_-147.1573': 5, 'S_-18.0106':1, 'C-term_-129.1468': 3, 'K_-129.1468': 3, 'E_-147.1573': 6, 'Y_-147.1573': 1, 'T_-147.1573': 4, 'N-term_-129.1468': 3, 'Q_-129.1468': 1, 'D_-18.0106': 2, 'C-term_-18.0106': 1, 'K_-18.0106': 1, 'S_-147.1573': 3, 'V_-129.1468': 1, 'G_-129.1468': 1, 'T_-18.0106': 2, 'non-localized': 2, 'E_-18.0106': 1},
                {'N-term_-129.1468': 185, 'G_-129.1468': 13, 'M_-129.1468': 1, 'D_-129.1468': 13, 'C-term_-129.1468': 85, 'K_-129.1468': 91, 'H_-129.1468': 9, 'E_-129.1468': 14, 'L_-129.1468': 17, 'N_-129.1468': 14, 'non-localized': 2, 'S_-129.1468': 17, 'Q_-129.1468': 12, 'Y_-129.1468': 6, 'T_-129.1468': 20, 'V_-129.1468': 12, 'N-term_-229.1630': 3, 'G_-229.1630': 2, 'S_+100.0160': 2, 'T_-229.1630': 1, 'K_+100.0160': 1, 'C_-129.1468': 8, 'R_-129.1468': 5, 'A_-129.1468': 8, 'I_-129.1468': 5, 'W_-129.1468': 3, 'F_-129.1468': 6},
                {'C_-116.0582': 22, 'N-term_-116.0582': 5, 'E_-116.0582': 1, 'non-localized': 29, 'S_-116.0582': 1, 'G_-116.0582': 2},
                {'K_-115.1201': 61, 'C-term_-115.1201': 46, 'non-localized': 3, 'N-term_-115.1201': 2, 'G_-115.1201': 2, 'A_+57.0217': 1, 'C-term_-172.1413': 1, 'K_-172.1413': 1},
                {'K_-114.1361': 141, 'Q_+0.9842': 5, 'C-term_-115.1201': 6, 'K_-115.1201': 6, 'N-term_-115.1201': 4, 'G_-115.1201': 1, 'N_+0.9842': 4, 'D_-115.1201': 1, 'C-term_-114.1361': 124, 'N-term_-114.1361': 115, 'G_-114.1361': 9, 'L_-114.1361': 14, 'D_-114.1361': 11, 'E_-114.1361': 12, 'S_-114.1361': 8, 'A_-114.1361': 12, 'N-term_-129.1468': 3, 'R_-129.1468': 1, 'E_+15.0114': 4, 'V_-114.1361': 14, 'R_+0.9842': 1, 'Q_-114.1361': 4, 'T_-114.1361': 13, 'H_-114.1361': 6, 'non-localized': 7, 'V_-115.1201': 1, 'N_-114.1361': 4, 'C-term_-129.1468': 6, 'K_-129.1468': 6, 'G_-129.1468': 2, 'M_-114.1361': 1, 'I_-114.1361': 4, 'L_+15.0114': 2, 'Y_-114.1361': 4, 'D_+15.0114': 2, 'Y_+15.0114': 1, 'A_-115.1201': 1},
                {'K_-113.1335': 34, 'C-term_-113.1335': 27, 'N-term_-113.1335': 13, 'H_-113.1335': 2, 'D_-113.1335': 1, 'Q_-113.1335': 2, 'G_-113.1335': 1, 'non-localized': 5, 'N_-113.1335': 1, 'S_-113.1335': 1, 'A_-113.1335': 1, 'V_-113.1335': 3, 'L_-113.1335': 1, 'W_-113.1335': 1},
                {'C-term_-100.1204': 74, 'K_-100.1204': 97, 'N-term_-157.1415': 1, 'L_-157.1415': 1, 'D_+57.0217': 1, 'H_-157.1415': 1, 'E_+57.0217': 1, 'N-term_-100.1204': 3, 'G_+57.0217': 1, 'C-term_-157.1415': 1, 'K_-157.1415': 1, 'non-localized': 1, 'T_-100.1204': 1},
                {'C_-91.0091': 61, 'non-localized': 1, 'N-term_-91.0091': 2, 'G_-91.0091': 1, 'C-term_-91.0091': 3, 'K_-91.0091': 1, 'R_-91.0091': 2, 'T_-91.0091': 1},
                {'K_-72.1252': 117, 'C-term_-72.1252': 86, 'non-localized': 5, 'N-term_-72.1252': 5, 'S_+100.0160':1, 'C-term_-172.1413': 1, 'K_-172.1413': 1, 'E_+57.0217': 1, 'C-term_-129.1468': 1, 'K_-129.1468': 1, 'M_-72.1252': 1},
                {'C_-25.0315': 58, 'N-term_-25.0315': 3, 'Y_-25.0315': 1, 'non-localized': 1, 'C-term_-25.0315': 1, 'K_-25.0315': 1},
                {'Y_-18.0106': 2, 'non-localized': 20, 'Q_-18.0106': 8, 'C-term_-18.0106': 11, 'K_-18.0106': 9, 'T_-18.0106': 39, 'S_-18.0106': 19, 'N_-18.0106': 5, 'D_-18.0106': 22, 'R_-18.0106': 1, 'E_-18.0106': 11, 'C_-18.0106': 1, 'N-term_-18.0106': 1, 'L_-18.0106': 1},
                {'C_-9.0368': 126, 'non-localized': 10, 'C_-25.0315': 8, 'C_+15.9949': 1, 'G_+15.9949': 2, 'C-term_-9.0368': 2, 'R_-9.0368': 1, 'N-term_-9.0368': 17, 'E_+15.9949': 1, 'K_-9.0368': 1, 'I_+15.9949': 1, 'M_+15.9949': 1, 'N-term_+15.9949': 1, 'A_+15.9949': 1, 'T_-9.0368': 1, 'C-term_+15.9949': 1, 'K_+15.9949': 1},
                {'T_-18.0106': 3, 'D_+15.9949': 2, 'T_-2.0156': 1, 'C_-2.0156': 30, 'F_+15.9949': 1, 'Y_-18.0106': 1, 'L_+15.9949': 3, 'E_-18.0106': 1, 'non-localized': 9, 'N_-18.0106': 2, 'C-term_-2.0156': 7, 'K_-2.0156': 6, 'S_-18.0106': 3, 'T_+15.9949': 1, 'Q_+15.9949': 1, 'C-term_-18.0106': 3, 'K_-18.0106': 1, 'N-term_-2.0156': 3, 'V_-2.0156': 3, 'A_+15.9949': 2, 'C_-18.0106': 2, 'Q_-18.0106': 1, 'E_+15.9949': 1, 'S_-2.0156': 2, 'A_-2.0156': 1, 'Y_-2.0156': 1, 'Y_+15.9949': 1, 'R_-18.0106': 2, 'K_+15.9949': 1, 'N-term_-18.0106': 1, 'D_-18.0106': 2, 'W_+15.9949': 1, 'G_+15.9949': 1, 'M_+15.9949': 3, 'R_-2.0156': 1},
                {'C-term_-0.9374': 44, 'L_-0.9374': 3, 'K_-0.9374': 23, 'R_-0.9374': 18, 'N-term_-0.9374': 17, 'I_-0.9374': 2, 'T_-0.9374': 2, 'E_-0.9374': 5, 'Q_-0.9374': 1, 'C_-0.9374': 2, 'D_-0.9374': 1, 'A_-0.9374': 2, 'F_-0.9374': 1, 'N_-0.9374': 1},
                {},
                {'non-localized': 6, 'F_+0.9842': 24, 'Q_+0.9842': 56, 'N-term_+0.9842': 33, 'E_+0.9842': 1, 'N_+0.9842': 222, 'C-term_+0.9842': 11, 'R_+0.9842': 5, 'G_+0.9842': 2, 'L_+0.9842': 1, 'H_+0.9842': 1, 'K_+0.9842': 9, 'I_+0.9842': 1, 'C_+0.9842': 4, 'V_+0.9842': 2, 'A_+0.9842': 1, 'T_+0.9842': 3, 'D_+0.9842': 1},
                {'T_+1.0028': 34, 'D_+1.0028': 35, 'V_+1.0028': 41, 'Y_+1.0028': 32, 'non-localized': 60, 'S_+1.0028': 38, 'C_+1.0028':36, 'P_+1.0028': 44, 'E_+1.0028': 65, 'G_+1.0028': 33, 'L_+1.0028': 45, 'A_+1.0028': 21, 'I_+1.0028': 26, 'M_+1.0028': 9, 'C-term_+1.0028': 3, 'R_+1.0028': 2, 'F_+1.0028': 34, 'N-term_+1.0028': 3, 'K_+1.0028': 2, 'N_+1.0028': 1},
                {'V_+1.9874': 8, 'F_+1.9874': 3, 'Q_+1.9874': 14, 'N_+1.9874': 56, 'non-localized': 20, 'C-term_+1.9874': 1, 'R_+1.9874': 1, 'K_+1.9874': 1, 'W_+1.9874': 1},
                {'non-localized': 33, 'D_+2.0048': 1, 'Y_+2.0048': 5, 'L_+2.0048': 6, 'F_+2.0048': 2, 'E_+2.0048': 3, 'V_+2.0048': 6, 'S_+2.0048': 3, 'C_+2.0048': 3, 'G_+2.0048': 4, 'P_+2.0048': 7, 'I_+2.0048': 2, 'T_+2.0048': 4, 'A_+2.0048': 2},
                {'non-localized': 18, 'E_+13.9786': 9, 'T_-18.0106': 6, 'I_+31.9894': 1, 'P_+13.9786': 12, 'Q_+13.9786': 8, 'T_-2.0156': 3, 'W_+15.9949': 3, 'D_+15.9949': 1, 'Y_-2.0156': 2, 'C-term_+13.9786': 12, 'K_+13.9786': 12, 'S_+13.9786': 5, 'P_+31.9894': 2, 'N-term_+13.9786': 8, 'V_+13.9786': 9, 'I_+13.9786': 8, 'L_+13.9786': 17, 'W_+13.9786': 6, 'T_+13.9786': 5, 'C_+31.9894': 2, 'C-term_-2.0156': 5, 'K_-2.0156': 4, 'S_-18.0106': 3, 'W_+31.9894': 2, 'S_-2.0156': 3, 'V_+15.9949': 1, 'C-term_+31.9894': 2, 'K_+31.9894': 2, 'Y_+13.9786': 1, 'Y_-18.0106': 1, 'R_+31.9894': 1, 'N-term_-2.0156': 2, 'A_-2.0156': 1, 'F_+15.9949': 1, 'C_+15.9949': 1, 'A_+13.9786': 7, 'Y_+15.9949': 4, 'R_-2.0156': 1, 'E_-18.0106': 2, 'N-term_+15.9949': 1, 'L_+15.9949': 1, 'L_+31.9894': 1, 'Y_+31.9894': 3, 'A_+15.9949': 1, 'D_-2.0156': 1, 'T_+15.9949': 1, 'M_+15.9949': 1, 'V_-2.0156': 1, 'D_-18.0106': 1, 'V_+31.9894': 1, 'Q_+15.9949': 1, 'C-term_-18.0106': 2, 'K_-18.0106': 2},
                {'non-localized': 13, 'D_+15.0114': 3, 'M_+15.0114': 31, 'E_+15.0114': 7, 'Y_+15.0114': 2, 'N-term_+15.0114': 6, 'D_+17.0268': 3, 'V_-2.0156': 1, 'C_-2.0156': 2, 'C-term_+15.0114': 9, 'R_+15.0114': 6, 'K_+15.0114': 3, 'C-term_+17.0268': 1, 'K_+17.0268': 1, 'T_+15.0114': 1, 'G_+15.0114': 1, 'C-term_-2.0156': 1, 'R_-2.0156': 1, 'A_+15.0114': 1},
                {'A_+15.9949': 10, 'H_+15.9949': 1, 'non-localized': 61, 'M_+15.9949': 168, 'L_+15.9949': 14, 'V_+15.9949': 7, 'T_+15.9949': 9, 'N_+0.9842': 4, 'C-term_+15.0114': 2, 'K_+15.0114': 1, 'W_+15.9949':24, 'E_+15.9949': 11, 'S_+15.9949': 9, 'C_+15.9949': 42, 'Y_+15.9949': 35, 'Q_+0.9842': 3, 'M_+15.0114': 3, 'G_+15.9949': 4, 'P_+15.9949': 10, 'N-term_+15.9949': 20, 'Q_+15.9949': 6, 'D_+15.0114': 1, 'C-term_+0.9842': 2, 'K_+0.9842': 1, 'F_+15.9949': 11, 'I_+15.9949': 4, 'K_+15.9949': 8, 'C-term_+15.9949': 6, 'D_+15.9949': 4, 'I_+15.0114': 1, 'N_+15.9949': 7, 'N-term_+0.9842': 2, 'D_+0.9842': 1, 'L_+15.0114': 4, 'N-term_+15.0114': 1, 'E_+15.0114': 1, 'F_+0.9842': 1, 'R_+15.0114': 1, 'R_+0.9842': 1, 'G_+0.9842': 1},
                {'non-localized': 83, 'G_+16.9974': 1, 'A_+16.9974': 7, 'V_+16.9974': 9, 'F_+16.9974': 3, 'S_+16.9974': 3, 'L_+16.9974': 4, 'Y_+16.9974': 5, 'I_+16.9974': 3, 'P_+16.9974': 4, 'M_+16.9974': 24, 'N_+16.9974': 3, 'C_+16.9974': 8, 'W_+16.9974': 7, 'T_+16.9974': 1, 'C-term_+16.9974': 1, 'K_+16.9974': 1, 'E_+16.9974': 3, 'N-term_+16.9974': 1},
                {'C-term_+17.0268': 58, 'K_+17.0268': 44, 'R_+17.0268': 9, 'D_+17.0268': 91, 'E_+17.0268': 104, 'N-term_+17.0268': 18, 'G_+17.0268': 2, 'Y_+17.0268': 1, 'V_+17.0268': 3, 'C_+17.0268': 2, 'non-localized': 10, 'N_+17.0268': 1, 'A_+17.0268': 2, 'L_+17.0268': 3, 'P_+17.0268': 1, 'I_+17.0268': 1, 'T_+17.0268': 1},
                {'C_+17.9997': 3, 'A_+17.9997': 1, 'non-localized': 51, 'S_+17.9997': 1, 'M_+17.9997': 2, 'L_+17.9997': 3, 'W_+17.9997': 1, 'Y_+17.9997': 2, 'E_+17.9997': 3, 'I_+17.9997': 2, 'N_+17.9997': 2, 'V_+17.9997': 1, 'F_+17.9997': 1, 'P_+17.9997': 1, 'N-term_+17.9997': 1},
                {'non-localized': 11, 'C_+18.0283': 14, 'D_+18.0283': 9, 'N-term_+18.0283': 1, 'Y_+18.0283': 1, 'E_+18.0283': 14, 'C-term_+18.0283': 5, 'R_+18.0283': 2, 'K_+18.0283': 2, 'P_+18.0283': 1},
                {'C-term_+30.9814': 64, 'K_+30.9814': 47, 'R_+30.9814': 17, 'N-term_+30.9814': 28, 'S_+30.9814': 2, 'G_+30.9814': 4, 'W_+30.9814': 16, 'Q_+30.9814': 2, 'C_+30.9814': 3, 'N_+30.9814': 1, 'I_+30.9814': 2, 'E_+30.9814': 1, 'A_+30.9814': 1, 'L_+30.9814': 4,'F_+30.9814': 1, 'T_+30.9814': 2, 'D_+30.9814': 2, 'V_+30.9814': 1, 'Y_+30.9814': 1},
                {'non-localized': 58, 'P_+31.9894': 8, 'W_+31.9894': 35, 'E_+31.9894': 11, 'Y_+31.9894': 19, 'I_+31.9894': 4, 'N-term_-25.0315': 1, 'G_-25.0315': 1,'T_+57.0217': 1, 'Y_-25.0315': 2, 'G_+57.0217': 1, 'C-term_+31.9894': 17, 'K_+31.9894': 11, 'C_+31.9894': 6, 'L_+31.9894': 12, 'F_+31.9894': 14, 'R_+31.9894': 6, 'C_-25.0315': 1, 'M_+57.0217': 1, 'V_+31.9894': 2, 'N-term_+31.9894': 12, 'T_+31.9894': 1, 'H_+57.0217': 1, 'M_+31.9894': 3, 'S_+57.0217': 1, 'C-term_-25.0315': 1, 'R_-25.0315': 1},
                {'non-localized': 33, 'Y_+32.9925': 5, 'E_+32.9925': 4, 'P_+32.9925': 3, 'W_+32.9925': 8, 'L_+32.9925': 2, 'M_+32.9925': 2, 'F_+32.9925': 1, 'I_+32.9925': 2, 'V_+32.9925': 1, 'C_+32.9925': 1},
                {'I_+31.9894': 2, 'V_+15.9949': 3, 'non-localized': 17, 'E_+31.9894': 1, 'N_+15.9949': 1, 'W_+47.9847': 11, 'W_+31.9894': 15, 'C_+15.9949': 5, 'M_+15.9949': 2, 'F_+47.9847': 1, 'S_+15.9949': 1, 'E_+15.9949': 3, 'A_+15.9949': 1, 'Y_+47.9847': 8, 'N-term_+47.9847': 2, 'L_+47.9847': 1, 'H_+57.0217': 1, 'C-term_-9.0368': 1, 'R_-9.0368': 1, 'N-term_+31.9894': 1, 'H_+47.9847': 1, 'T_+15.9949': 1, 'W_+15.9949': 1},
                {'C-term_+52.9218': 139, 'R_+52.9218': 49, 'N-term_+52.9218': 203, 'A_+52.9218': 24, 'F_+52.9218': 3, 'Q_+52.9218': 16, 'K_+52.9218': 88, 'V_+52.9218': 14, 'T_+52.9218': 12, 'L_+52.9218': 18, 'G_+52.9218': 16, 'E_+52.9218': 25, 'S_+52.9218': 12, 'D_+52.9218': 24, 'Y_+52.9218': 7, 'M_+52.9218': 2, 'I_+52.9218': 12, 'N_+52.9218': 13, 'C_+52.9218': 5, 'H_+52.9218': 1, 'W_+52.9218': 1},
                {'non-localized': 49, 'M_+57.0217': 39, 'S_+57.0217': 7, 'D_+57.0217': 3, 'E_+57.0217': 12, 'T_+57.0217': 7, 'C_+57.0217': 6, 'H_+57.0217': 36, 'G_+57.0217': 14, 'Y_+57.0217': 62, 'A_+57.0217': 13, 'C-term_+57.0217': 128, 'K_+57.0217': 141, 'N-term_-172.1413': 5, 'D_-172.1413': 1, 'H_+229.1626': 2, 'N-term_+57.0217': 11, 'T_+229.1626': 3, 'C-term_-172.1413': 3, 'K_-172.1413': 3, 'T_-172.1413': 1, 'S_+229.1626': 3, 'N_-172.1413': 1, 'L_-172.1413': 1, 'Y_-172.1413': 1},
                {'E_+58.0241': 4, 'M_+58.0241': 7, 'D_+58.0241': 3, 'Y_+58.0241': 14, 'non-localized': 43, 'T_+58.0241': 6, 'A_+58.0241': 3, 'H_+58.0241': 11, 'Q_+58.0241': 3, 'N-term_+58.0241': 3, 'K_+58.0241': 11, 'S_+58.0241': 2, 'G_+58.0241': 2, 'L_+58.0241': 1, 'C-term_+58.0241': 5},
                {'non-localized': 10, 'S_+100.0160': 43, 'N-term_-129.1468': 10, 'T_-129.1468': 1, 'S_+229.1626': 8, 'G_-129.1468': 1, 'A_-129.1468': 1, 'H_+229.1626': 1, 'H_-129.1468': 1, 'T_+229.1626': 2, 'D_-129.1468': 1, 'S_-129.1468': 1, 'C-term_-129.1468': 1, 'K_-129.1468': 1,'N-term_+100.0160': 3, 'F_-129.1468': 1, 'V_-129.1468': 1, 'E_-129.1468': 1, 'T_+100.0160': 1, 'L_-129.1468': 1},
                {'T_+229.1626': 31, 'S_+229.1626': 79, 'N-term_+229.1626': 9, 'C-term_+229.1626': 21, 'K_+229.1626': 3, 'non-localized':14, 'H_+229.1626': 8, 'Q_+229.1626': 1, 'G_+229.1626': 1, 'R_+229.1626': 18, 'A_+229.1626': 1, 'D_+229.1626': 1, 'E_+229.1626': 1},
                {'T_+230.1649': 14, 'N-term_+230.1649': 4, 'non-localized': 19, 'C-term_+230.1649': 3, 'R_+230.1649': 2, 'S_+230.1649': 36, 'K_+230.1649': 1, 'H_+230.1649': 4, 'E_+230.1649': 1}
            ]
        )
